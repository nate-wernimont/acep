package edu.iastate.cs.design.asymptotic.datastructures;
/**
 * Represents a pair of something.
 * @author Sean Mooney
 *
 * @param <T1>
 * @param <T2>
 */
public class Pair <T1, T2>  {
	private T1 fst; T2 snd;
	
	public Pair(T1 t1, T2 t2){
		this.fst = t1;
		this.snd = t2;
	}

	
	@Override
	public int hashCode() {
	//autogenerated
		final int prime = 31;
		int result = 1;
		result = prime * result + ((fst == null) ? 0 : fst.hashCode());
		result = prime * result + ((snd == null) ? 0 : snd.hashCode());
		return result;
	}

	@Override
	public String toString () {
		String result = fst.toString() + "----->" + snd.toString();
		return result;
	}


	@Override
	public boolean equals(Object obj) { // $codepro.audit.disable com.instantiations.assist.eclipse.analysis.audit.rule.effectivejava.obeyEqualsContract.obeyGeneralContractOfEquals
	//autogenerated
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Pair<?,?> other = (Pair<?,?>) obj;
		if (fst == null) {
			if (other.fst != null)
				return false;
		} else if (!fst.equals(other.fst))
			return false;
		if (snd == null) {
			if (other.snd != null)
				return false;
		} else if (!snd.equals(other.snd))
			return false;
		return true;
	}



	public T1 first() {
		return fst;
	}

	public void setFirst(T1 fst) {
		this.fst = fst;
	}

	public T2 second() {
		return snd;
	}

	public void setSecond(T2 snd) {
		this.snd = snd;
	}
	
	
	
}